<hr/>
<form id="payment-form">
    <div id="link-authentication-element">
        <!--Stripe.js injects the Link Authentication Element-->
    </div>
    <div id="payment-element">
        <!--Stripe.js injects the Payment Element-->
    </div>
    <br/>
    <div class="button-wrapper">
    <button id="submit" type="submit"  style="
    border-radius: 0 !important; color:white !important;"   class="mb-xs mt-xs mr-xs btn btn-dark">
        <span class="icon icon-lg"><i class="fa fa-credit-card"></i></span> Payer  <span id="recharge-montant-js" style="letter-spacing: 1px;">{{ amount ~ ' ' ~ currency }}</span>
    </button>  </div>
    <br/>
    <div id="card-errors"  role="alert "></div>
    <div id="payment-message" class="hidden"></div>
</form>
{% block javascripts %}
    <script type="text/javascript">

        let elements = null;
        let stripeIntegration = null;
        $(document).ready(function(){

            stripeIntegration = Stripe('{{ publicKey }}');
            const appearance = {
                theme: 'stripe',

                variables: {
                    colorPrimary: '#0570de',
                    colorBackground: '#ffffff',
                    colorText: '#30313d',
                    colorDanger: '#df1b41',
                    fontFamily: 'Open Sans, sans-serif',
                    borderRadius: '4px',
                    // See all possible variables below
                }
            };

            elements = stripeIntegration.elements({
                clientSecret: '{{ clientSecret }}',appearance: appearance
            });
            elements.update({locale: 'fr'});
            let card = null;



            var linkAuthenticationElement = elements.create('linkAuthentication');
            initialize();
            document.querySelector("#payment-form").addEventListener("submit", handleSubmit);
        });

        async function initialize() {
            let style = {
                base: {
                    color: "#32325d",
                }
            };
            card = elements.create("card",{ style: style });
            card.mount("#link-authentication-element");
            card.on('change', ({error}) => {
                let displayError = document.getElementById('card-errors');
                if (error) {
                    displayError.textContent = error.message;
                } else {
                    displayError.textContent = '';
                }
            });

        }

        async function handleSubmit(e) {
            e.preventDefault();
            $('#process-control').html(` <div class="processing" style=" position: absolute;
    width: 100%;
    height: 100%;
    display:none !important;
    background: rgba(0,0,0,0.5);
    z-index: 999999999;
    margin: 0 auto;
    flex-direction: column;
    justify-content: center;
    align-items: center;">
                                            <div class="lds-spinner" style="
    display: inline-block;
    position: relative;
    top:50%;
    left: 50%;
    transform: translate(-50%,-50%);
    width: 80px;
    height: 80px;
">
                                                <div></div>
                                                <div></div>
                                                <div></div>
                                                <div></div>
                                                <div></div>
                                                <div></div>
                                                <div></div>
                                                <div></div>
                                                <div></div>
                                                <div></div>
                                                <div></div>
                                                <div></div>
                                            </div>
                                        </div>`);
            $('.processing').css('display','block');
            let displayError = document.getElementById('card-errors');
            displayError.textContent = '';
            displayError.classList.remove('alert-danger','alert');
            // If the client secret was rendered server-side as a data-secret attribute
            // on the <form> element, you can retrieve it here by calling `form.dataset.secret`
            stripeIntegration.confirmCardPayment('{{ clientSecret }}', {
                payment_method: {
                    card: card,
                    billing_details: {
                        name: 'BPAY CUSTOMER'
                    }
                }
            }).then(function(result) {
                if (result.error) {
                    let displayError = document.getElementById('card-errors');
                    displayError.textContent = result.error.message;
                    displayError.classList.add('alert-danger', 'alert');
                    $('.processing').css('display','none');
                } else {

                    // The virement has been processed!
                    if (result.paymentIntent.status === 'succeeded') {
                        $('#recharge_transactionRef').val(result.paymentIntent.id);
                        sell();
                    }else{
                        let displayError = document.getElementById('card-errors');
                        displayError.textContent = 'Paiment echou√©';
                    }
                }
            });

            //setLoading(false);
        }
    </script>
{% endblock %}
